clear all
capture log close 
capture set virtual off
set memory 10000m 
capture set matsize 600 
capture set more off
memory

use "Data.dta", clear

/*
keep if lxij!=. & lmij!=.
encode namem, gen(em)
encode namex, gen(ex)
keep ltxij bilat year adinit ccijy ncu nfta ldist nbord nlang em ex namem namex
tab year, gen(y)
tab em, gen(em)
tab ex, gen(ex)
*/

xtset bilat year 
xtdes // unbalanced 

*** different estimators

* pooled ols
qui reg ltxij adinit ccijy ncu nfta ldist nbord nlang y* 
est store polsm
qui testparm y* // F-test time-fixed effects
di r(p)
qui testparm * // F-test all regressors
di r(p)

* fixed effects: dvls
//reg ltxij adinit ccijy ncu nfta ldist nbord nlang i.year i.em i.ex
qui reg ltxij adinit ccijy ncu nfta ldist nbord nlang y* em* ex*
est store fem
qui testparm em* ex* // F-test O-D fixed effects
di r(p)
qui testparm y* // F-test time-fixed effects
di r(p)
qui testparm * // F-test all regressors
di r(p)

* fixed effects: within estimator
xtreg ltxij adinit ccijy ncu nfta ldist nbord nlang y*, fe
est store bilat
scalar ur = e(rss)
scalar nk1 =  e(df_r)
scalar q =  e(df_a)
qui reg ltxij adinit ccijy ncu nfta y*
scalar r = e(rss)
scalar Fvalue = (r-ur)/ur*nk1/q
di Fvalue
xttest3 // groupwise heteroskedasticity: tests the hypothesis that
// sigma^2(i)==sigma for i=1,N_g, where N_g is the number of cross-sectional units
qui testparm y* // F-test time-fixed effects
di r(p)
qui testparm * // F-test all regressors
di r(p)

* fixed effects: first difference
reg D.ltxij D.adinit D.ccijy D.ncu D.nfta D.y*, nocons // omit time-invariant variables
est store diff
scalar ur = e(rss)
scalar nk1 =  e(df_r)
scalar q =  21449 // e(df_a) not present
qui reg ltxij adinit ccijy ncu nfta y*
scalar r = e(rss)
scalar Fvalue = (r-ur)/ur*nk1/q
di Fvalue
qui testparm D.y* // F-test time-fixed effects
di r(p)
qui testparm D.adinit D.ccijy D.ncu D.nfta D.y* // F-test all regressors
di r(p)

* random effect
qui xtreg ltxij adinit ccijy ncu nfta ldist nbord nlang i.year , re // no time trend allowed
xttest0 // Breusch-Pagan LM test

qui xtreg ltxij adinit ccijy ncu nfta ldist nbord nlang y* , re
est store  rem
hausman fem rem // Hausman test 1
hausman bilat rem // Hausman test 2

preserve
gen ltxij_ = D.ltxij
gen adinit_ = D.adinit
gen ccijy_ = D.ccijy
gen ncu_ = D.ncu
gen nfta_ = D.nfta
xtset bilat year
foreach v of varlist y* {
 gen `v'_= D.`v'
}
rename y*_ t*_
drop ltxij adinit ccijy ncu nfta y*
rename *_ *
reg ltxij adinit ccijy ncu nfta t*, nocons // omit time-invariant variables
est store diff
hausman diff rem
restore

qui testparm y* // F-test time-fixed effects
di r(p)
qui testparm * // F-test all regressors
di r(p)

est table polsm fem rem , drop(i.year y* em* ex*) b p stats(N r2_a)

*** testing conditions

xtserial ltxij adinit ccijy ncu nfta ldist nbord nlang y* // Wooldridge test for serial correlation (individual-fixed effects not needed)

qui reg ltxij adinit F.adinit ccijy F.ccijy ncu F.ncu nfta F.nfta ldist nbord nlang y* em* ex* // strict exogeneity test FE 1
est store exofe1
qui xtreg ltxij adinit F.adinit ccijy F.ccijy ncu F.ncu nfta F.nfta ldist nbord nlang y*, fe // strict exogeneity test FE 2
est store exofe2
qui reg D.ltxij D.adinit F.D.adinit D.ccijy F.D.ccijy D.ncu F.D.ncu D.nfta F.D.nfta D.y*, nocon // strict exogeneity test FE 3
est store exofe3
qui xtreg ltxij adinit F.adinit ccijy F.ccijy ncu F.ncu nfta F.nfta ldist nbord nlang y* , re // strict exogeneity test RE
est store exore

est table exofe1 exofe2 exofe3 exore, drop( y* em* ex*) star(0.1 0.05 0.01)


*** adjusted SE

qui reg ltxij adinit ccijy ncu nfta ldist nbord nlang y* em* ex* // basic
est store fem

qui reg ltxij adinit ccijy ncu nfta ldist nbord nlang y* em* ex*, vce(robust) // robust
est store robust

qui reg ltxij adinit ccijy ncu nfta ldist nbord nlang y* em* ex*, vce(cluster namem) // cluster on importer
est store clem
qui reg ltxij adinit ccijy ncu nfta ldist nbord nlang y* em* ex*, vce(cluster namex) // cluster on exporter
est store clex
qui reg ltxij adinit ccijy ncu nfta ldist nbord nlang y* em* ex*, vce(cluster bilat) // cluster on panel id
est store clpanid

xtscc ltxij adinit ccijy ncu nfta ldist nbord nlang y* em* ex* // Driscoll and Kraay standard errors
est store scc

newey2 ltxij adinit ccijy ncu nfta ldist nbord nlang y* em* ex*, lag(1) force // year is not regularly spaced
est store newey

reg ltxij adinit ccijy ncu nfta ldist nbord nlang y* em* ex*,  vce(boot,reps(2000)) // bootstrapped SE
est store boot

xtset, clear
bootstrap, reps(2000) cluster(namem) idcluster(newid) : reg ltxij adinit ccijy ncu nfta ldist nbord nlang y* ex* i.newid // bootstrapped cluster on importer
est store bootclem

xtset, clear
bootstrap, reps(2000) cluster(namex) idcluster(newid) : reg ltxij adinit ccijy ncu nfta ldist nbord nlang y* em* i.newid // bootstrapped cluster on exporter
est store bootclex

est table fem robust clem clex clpanid scc boot, drop(y* em* ex*) stats(N r2_a) b se 
